default_platform(:ios)

platform :ios do
  
  lane :beta do
    # 1. Assurer que les dépendances Flutter sont à jour
    sh("cd .. && fvm flutter pub get")

    # 2. Se connecter à l'App Store Connect
    api_key = app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_ISSUER_ID'],
      key_filepath: File.absolute_path(ENV['APP_STORE_CONNECT_KEY_PATH'])
    )

    # 3. Déterminer la version et le nouveau numéro de build
    current_version = get_version_number(xcodeproj: "Runner.xcodeproj")
    
    begin
      # Essayer de récupérer le dernier build pour cette version
      latest_build = latest_testflight_build_number(
        app_identifier: "fr.yellowstone.welly.app",
        version: current_version,
        api_key: api_key
      )
      new_build_number = latest_build + 1
    rescue
      # Si aucun build n'existe pour cette version, commencer à 1
      new_build_number = 1
    end

    UI.message("Version : #{current_version}, Nouveau Build : #{new_build_number}")

    # 4. Compiler l'application en injectant les numéros de version
    build_app(
      workspace: "Runner.xcworkspace",
      scheme: "prod",
      clean: true,
      export_method: "app-store",
      export_options: {
        signingStyle: "automatic",
        teamID: ENV['APPLE_TEAM_ID']
      },
      xcargs: "FLUTTER_BUILD_NUMBER=#{new_build_number} FLUTTER_BUILD_NAME=#{current_version}"
    )

    # 5. Envoyer à TestFlight
    upload_to_testflight(
      api_key: api_key,
      skip_waiting_for_build_processing: true
    )
  end

  # Vous pouvez ajouter une lane :release sur le même modèle si nécessaire
  
end